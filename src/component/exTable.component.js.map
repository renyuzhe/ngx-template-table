{"version":3,"file":"exTable.component.js","sourceRoot":"","sources":["../../../lib/src/component/exTable.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter, TemplateRef, ViewChild } from '@angular/core';\nimport { NgTemplateOutlet } from '@angular/common';\nimport { Searchs, Search } from './exTable.model';\n\n@Component({\n    selector: 'app-ex-table',\n    template: \"<div nz-row> <div nz-col [nzXs]=\\\"24\\\" [nzSm]=\\\"24\\\" [nzMd]=\\\"12\\\" [nzLg]=\\\"12\\\" [nzXl]=\\\"8\\\" *ngFor=\\\"let item of searchConfig\\\" class=\\\"search\\\"> <div nz-col [nzSpan]=\\\"8\\\" class=\\\"label\\\"> <label class=\\\"labelItem\\\">{{item.label}}</label> </div> <ng-container [ngSwitch]='item.type'> <ng-container *ngSwitchCase=\\\"'text'\\\"> <div nz-col [nzSpan]=\\\"16\\\"> <nz-input [(ngModel)]=\\\"item.value\\\" [nzPlaceHolder]=\\\"'请输入' + item.label\\\" [nzSize]=\\\"'large'\\\"></nz-input> </div> </ng-container> <ng-container *ngSwitchCase=\\\"'time'\\\"> <div nz-col [nzSpan]=\\\"16\\\" class=\\\"time\\\"> <nz-datepicker [(ngModel)]=\\\"item.value\\\" [nzSize]=\\\"'large'\\\" [nzPlaceHolder]=\\\"'请选择' + item.label\\\"></nz-datepicker> </div> </ng-container> <ng-container *ngSwitchCase=\\\"'timeBetween'\\\"> <div nz-col [nzSpan]=\\\"16\\\" class=\\\"timeBetween\\\"> <nz-datepicker [(ngModel)]=\\\"item.value\\\" [nzSize]=\\\"'large'\\\" [nzPlaceHolder]=\\\"'请选择起始' + item.label\\\"></nz-datepicker> <label>至</label> <nz-datepicker [(ngModel)]=\\\"item.secondValue\\\" [nzSize]=\\\"'large'\\\" [nzPlaceHolder]=\\\"'请选择终止' + item.label\\\"></nz-datepicker> </div> </ng-container> <ng-container *ngSwitchCase=\\\"'select'\\\"> <div nz-col [nzSpan]=\\\"16\\\" class=\\\"select\\\"> <nz-select nzAllowClear [nzPlaceHolder]=\\\"'请选择' + item.label\\\" [(ngModel)]=\\\"item.value\\\" [nzSize]=\\\"'large'\\\" nzShowSearch> <nz-option *ngFor=\\\"let option of item.searchList\\\" [nzLabel]=\\\"option.label\\\" [nzValue]=\\\"option.value\\\" [nzDisabled]=\\\"option.disabled\\\"> </nz-option> </nz-select> </div> </ng-container> <ng-container *ngSwitchCase=\\\"'mulSelect'\\\"> <div nz-col [nzSpan]=\\\"16\\\" class=\\\"select\\\"> <nz-select [nzSize]=\\\"'large'\\\" [nzMode]=\\\"'multiple'\\\" [nzPlaceHolder]=\\\"'请选择人员'\\\" [(ngModel)]=\\\"item.value\\\" [nzNotFoundContent]=\\\"'无法找到'\\\"> <nz-option *ngFor=\\\"let option of item.searchList\\\" [nzLabel]=\\\"option.label\\\" [nzValue]=\\\"option.value\\\" [nzDisabled]=\\\"option.disabled\\\"> </nz-option> </nz-select> </div> </ng-container> </ng-container> </div> </div> <div class=\\\"btnList\\\"> <div class=\\\"btns\\\"> <button *ngFor = \\\"let item of buttonConfig\\\" nz-button [nzType]=\\\"'primary'\\\" (click)=\\\"btnClick(item.key)\\\"> <span>{{item.labal}}</span> </button> <ng-container *ngIf=\\\"searchConfig.length > 0\\\"> <button nz-button [nzType]=\\\"'primary'\\\" (click)=\\\"reSet()\\\"> <span>重置</span> </button> <button nz-button [nzType]=\\\"'primary'\\\" (click)=\\\"search()\\\"> <span>搜索</span> </button> </ng-container> </div> </div> <nz-table #nzTable [nzTotal]=\\\"totel\\\" [nzShowSizeChanger]=\\\"true\\\" (nzPageSizeChange)=\\\"nzPageSizeChange($event)\\\" [nzPageSizeSelectorValues]=\\\"pageSizeSelectorValues\\\" [nzAjaxData]=\\\"tableData\\\" [nzShowTotal] = \\\"true\\\" (nzPageIndexChange)=\\\"pageIndexChange($event)\\\"> <thead nz-thead> <tr> <th nz-th *ngFor=\\\"let label of tableConfig\\\" [nzWidth] = \\\"label.width\\\"> <span>{{label.name}}</span> </th> </tr> </thead> <tbody nz-tbody #tableList> <tr nz-tbody-tr *ngFor=\\\"let data of tableData; let index = index\\\" (click)=\\\"rowClick(data, index)\\\"> <!-- <td nz-td> <ng-container *ngTemplateOutlet=\\\"test.cell; context: {row: data, index: index}\\\"> </ng-container> </td> --> <td nz-td *ngFor=\\\"let item of tableConfig\\\"> <ng-container [ngSwitch]='item.type'> <ng-container *ngSwitchCase=\\\"'text'\\\">{{data[item.key]}}</ng-container> <ng-container *ngSwitchDefault> <ng-container *ngTemplateOutlet=\\\"item.cell; context: {row: data, index: index, key: item.key}\\\"></ng-container> </ng-container> </ng-container> </td> </tr> </tbody> </nz-table>\",\n    styles: [\".search { margin: 10px 0 0px 0px; padding: 0 10px; display: flex; flex-direction: row; align-items: center; } .btnList { display: flex; flex-direction: row-reverse; margin: 10px 10px; } .label { display: flex; flex-direction: row-reverse; } .oneDatePick { width: 100%; } .time nz-datepicker { width: 100%; } .timeBetween { display: flex; flex-direction: row; justify-content: space-between; align-items: center; } .timeBetween nz-datepicker { width: 45%; } .select nz-select { width: 100%; } .labelItem { margin-right: 10px; font-size: 12px; } .labelItem::after { content: \\\":\\\" } \"]\n})\nexport class ExTableComponent implements OnInit {\n\n    index: number;\n    size: number;\n    @Input('test') test: any;\n    @Input('searchConfig') searchConfig: any;\n    @Input('tableConfig') tableConfig: any;\n    @Input('buttonConfig') buttonConfig: any;\n    @Input('tableData') tableData: any;\n    @Input('totel') totel: any;\n    @Input('pageSizeSelectorValues') pageSizeSelectorValues: any;\n    @Output() onSearch = new EventEmitter<Searchs>();\n    @Output() onRowClick = new EventEmitter<any>();\n    @Output() onBtnClick = new EventEmitter<string>();\n    @ViewChild('tableList') tableList: any;\n\n    constructor() { }\n\n    ngOnInit() {\n        this.index = 1;\n        this.size = 10;\n        this.searchConfig.map((item: Search) => {\n            if (item.type === 'time') {\n                item.value = null;\n            }\n            if (item.type === 'timeBetween') {\n                item.value = null;\n                item.secondValue = null;\n            }\n        });\n    }\n    btnClick(key: any) {\n        this.onBtnClick.emit(key);\n    }\n    pageIndexChange(index: any) {\n        this.index = index;\n        console.log(index);\n        this.search();\n    }\n    search() {\n        console.log(this.tableConfig);\n        console.log(this.tableData);\n        const searchs: Searchs = {\n            index: this.index,\n            size: this.size,\n            queryList: []\n        };\n        this.searchConfig.map((item: Search) => {\n            if (item.value || item.secondValue || item.value === 0 || item.secondValue === 0) {\n                if (item.secondValue) {\n                    const search = {\n                        key: item.key,\n                        primaryValue: item.value,\n                        secondValue: item.secondValue\n                    };\n                    searchs.queryList.push(search);\n                } else {\n                    const search = {\n                        key: item.key,\n                        primaryValue: item.value\n                    };\n                    searchs.queryList.push(search);\n                }\n            }\n        });\n        const searchList: any = new Object();\n        let key;\n        searchs.queryList.map((item: any, index: any) => {\n            key = item.key;\n            searchList[key] = item;\n        });\n        searchs.queryList = searchList;\n        this.onSearch.emit(searchs);\n    }\n    rowClick(row: any, index: any) {\n        this.onRowClick.emit(row);\n        for (let i = 0; i < this.tableList.nativeElement.children.length; i++) {\n            this.tableList.nativeElement.children[i].style.backgroundColor = 'white';\n        }\n        this.tableList.nativeElement.children[index].style.backgroundColor = 'RGBA(236,246,253,1)';\n    }\n    nzPageSizeChange(event: any) {\n        console.log(event);\n        this.size = event;\n        this.search();\n    }\n    reSet() {\n        this.searchConfig.map((item: Search) => {\n            if (item.value) {\n                item.value = null;\n            }\n            if (item.secondValue) {\n                item.secondValue = null;\n            }\n        });\n    }\n}\n"]}